#==========================================================================
# Description: Build DC-A588 Kernel and Uboot
#==========================================================================

name: Build DC-A588 Kernel and Uboot

on:
  repository_dispatch:
  workflow_dispatch:

env:
  TZ: America/New_York
  ROOTFS_SCRIPT: compile-kernel/tools/script/armbian_rootfs.sh

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install python2 python2-dev python-is-python3 $(curl -fsSL https://tinyurl.com/ubuntu2204-build-armbian)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
          sudo rm -rf ~/{.cargo,.dotnet,.rustup}
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Create simulated physical disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /builder
          sudo mount /dev/github/runner /builder
          sudo chown -R runner.runner /builder
          df -Th

      - name: Download DC-A588 uboot and kernel code
        id: down_d3588
        working-directory: /builder/
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          df -hT ${PWD}
          git clone --recursive --single-branch --branch=master https://github.com/yifengyou/dc-a588.git dc-a588.git
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Compile DC-A588 uboot and kernel code
        id: compile_d3588
        working-directory: /builder/dc-a588.git
        if: ${{ steps.down_d3588.outputs.status }} == 'success' && !cancelled()
        run: |
          ls -alh
          du -sh *
          ./build.sh
          ls -alh rockdev
          # archive all ko modules
          cd rockdev && find . -type f -name "*.ko" -print0 | tar -czvf modules.tar.gz --null -T -
          echo "build_tag=DC-A588_UBOOT_KERNEL" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload DC-A588 image to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.compile_d3588.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.compile_d3588.outputs.build_tag }}
          artifacts: /builder/dc-a588.git/rockdev/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### DC-A588 Image information
            - Uboot version: U-Boot 2017.09-kdev
            - Kernel version: 5.10.226-kdev SMP mod_unload aarch64