#==========================================================================
# Description: Armbian Build 
#==========================================================================

name: Armbian Build

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      set_release:
        description: "Select OS Release."
        required: false
        default: "noble"
        type: choice
        options:
          - jammy
          - noble
          - bookworm
          - bullseye
      set_board:
        description: "Select device board."
        required: false
        default: "nanopct6"
        type: choice
        options:
          - nanopct6
          - d3588
          - dm60
          - dc-a588
      set_branch:
        description: "Set the branch"
        required: false
        default: "current"
        type: choice
        options:
          - edge
          - current
          - legacy
      set_desktop:
        description: "Set desktop type"
        required: false
        default: "cli"
        type: choice
        options:
          - cli
          - gnome
          - xfce

env:
  TZ: America/New_York
  ROOTFS_SCRIPT: compile-kernel/tools/script/armbian_rootfs.sh

jobs:
  build:
    # using ubuntu 22.04 virtual machine environment
    runs-on: ubuntu-22.04

    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install python2 python2-dev python-is-python3 squashfs-tools $(curl -fsSL https://tinyurl.com/ubuntu2204-build-armbian)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
          sudo rm -rf ~/{.cargo,.dotnet,.rustup}
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Create simulated physical disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /builder
          sudo mount /dev/github/runner /builder
          sudo chown -R runner.runner /builder
          df -Th

      - name: Download armbian source code
        id: down_armbian
        working-directory: /builder/
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          df -hT ${PWD}
          git clone -q --single-branch --depth=1 --branch v25.8.0-trunk.230 https://github.com/armbian/build.git armbian.git
          # v25.8.0-trunk.230
          cd armbian.git
          ls -alh
          git status
          git log HEAD -n1
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Compile Armbian [ ${{ inputs.set_release }} ] [ ${{ inputs.set_desktop }} ]
        id: compile_armbian
        working-directory: /builder/armbian.git
        if: ${{ steps.down_armbian.outputs.status }} == 'success' && !cancelled()
        run: |
          # set up build tag
          echo "build_tag=Armbian_${{ inputs.set_board }}_${{ inputs.set_release }}_${{ inputs.set_desktop }}" >> ${GITHUB_OUTPUT}

          if [ "${{ inputs.set_desktop }}" == "cli" ] ; then
            BUILD_DESKTOP="BUILD_DESKTOP=no"
          else
            BUILD_DESKTOP=" \
                BUILD_DESKTOP=yes \
                DESKTOP_APPGROUPS_SELECTED=remote_desktop \
                DESKTOP_ENVIRONMENT=${{ inputs.set_desktop }} \
                DESKTOP_ENVIRONMENT_CONFIG_NAME=config_base"
          fi

          # BRANCH=edge    : newest kernel such as 6.10
          # BRANCH=current : stable kernel such as 6.6
          # BRANCH=legacy  : vendor kernel rockchip 5.10
          export KERNELBRANCH="commit:e03ced99c437f4a7992b8fa3d97d598f55453fd0"
          ./compile.sh RELEASE=${{ inputs.set_release }} \
                       BOARD=${{ inputs.set_board }} \
                       BRANCH=${{ inputs.set_branch }}\
                       BUILD_MINIMAL=no \
                       BUILD_ONLY=default \
                       HOST=armbian \
                       ${BUILD_DESKTOP} \
                       EXPERT=yes \
                       KERNEL_CONFIGURE=no \
                       COMPRESS_OUTPUTIMAGE="sha,img,xz" \
                       VENDOR="kdev" \
                       SHARE_LOG=yes
          ls -alh /builder/armbian.git/output/images/
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload Armbian image to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.compile_armbian.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.compile_armbian.outputs.build_tag }}
          artifacts: /builder/armbian.git/output/images/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### Armbian Image information
            - Default username: root
            - Default password: 123
